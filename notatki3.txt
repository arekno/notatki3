import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

# Zadanie 1
# Na wykresie wyœwietl wykres liniowy funkcji f(x) = 1/x dla x ? [1, 20]. Dodaj etykietê do linii wykresu i
# wyœwietl legendê. Dodaj odpowiednie etykiety do osi wykresu (‘x’, ’f(x)’) oraz ustaw zakres osi na (0,
# 1) oraz (1, d³ugoœæ wektora x).

#zad1
# x = np.arange(1, 21, 1)
# plt.plot(x, 1/x, label='f(x) = 1/x')
# plt.xlabel('x')
# plt.ylabel('f(x)')
# plt.axis([0, 20, 0, 1])
# plt.legend()
# plt.title('Wykres funkcji f(x) = 1/x dla x[1,20]')
# plt.show()
# zad2
# x = np.arange(1, 21, 1)
# plt.plot(x, 1/x, 'g>:', label='f(x) = 1/x' )
# plt.xlabel('x')
# plt.ylabel('f(x)')
# plt.axis([0, 20, 0, 1])
# plt.legend()
# plt.title('Wykres funkcji f(x) = 1/x dla x[1,20]')
# plt.show()

# Na jednym wykresie wygeneruj wykresy funkcji sin(x) oraz cos(x) dla x ? [0, 30] z krokiem 0.1. Dodaj
# etykiety i legendê do wykresu.
# zad3
# x = np.arange(0, 30, .1)
# plt.plot(x, np.sin(x), 'b', label='sin(x)')
# plt.plot(x, np.cos(x), 'r', label='cos(x)')
# plt.xlabel('x')
# plt.ylabel('sin(x) cos(x)')
# plt.legend(loc='upper right')
# plt.title('Wykres sin(x), cos(x)')
# plt.show()
# Zadanie 4
# Korzystaj¹c ze zbioru danych Iris (https://archive.ics.uci.edu/ml/datasets/iris) wygeneruj wykres
# punktowy, gdzie wektor x to wartoœæ ‘sepal length’ a y to ‘sepal width’, dodaj paletê kolorów c na
# przyk³adzie listingu 6 a parametr s niech bêdzie wartoœci¹ absolutn¹ z ró¿nicy wartoœci
# poszczególnych elementów wektorów x oraz y.
# zad4
# df = pd.read_csv('iris.data', header=0, sep=',', decimal='.')
# print(df)
# # przygotowanie wektora kolorów
# colors = np.random.randint(0, 50, len(df.index))
# # przygotowanie wektora z rozmiarami 'kropek'
# scale = np.abs(df['sepal length'] - df['sepal width'])
#
# #
# plt.scatter(df['sepal length'], df['sepal width'], c=colors, s=scale)
# plt.xlabel('sepal length')
# plt.ylabel('sepal width')
# plt.show()
#
# Zadanie 5
# Korzystaj¹c z biblioteki pandas wczytaj zbiór danych z narodzinami dzieci przedstawiony w lekcji 8.
# Nastêpnie na jednym p³ótnie wyœwietl 3 wykresy (jeden wiersz i 3 kolumny). Dodaj do wykresów
# stosowne etykiety. Poustawiaj ró¿ne kolory dla wykresów.
# 1 wykres – wykres s³upkowy przedstawiaj¹cy iloœæ narodzonych dziewczynek i ch³opców w ca³ym
# okresie.
# 2 wykres – wykres liniowy, gdzie bêd¹ dwie linie, jedna dla iloœci urodzonych kobiet, druga dla
# mê¿czyzn dla ka¿dego roku z osobna. Czyli y to iloœæ narodzonych kobiet lub mê¿czyzn (dwie linie), x
# to rok.
# 3 wykres – wykres s³upkowy przedstawiaj¹cy sumê urodzonych dzieci w ka¿dym roku
#zad5
# xlsx = pd.ExcelFile('..\\lab 5 i 6\\imiona.xlsx')
# df = pd.read_excel(xlsx, header=0)
# print(df)
# plt.subplot(1, 3, 1)
# grouped = df.groupby('Plec')
# etykiety = list(grouped.groups.keys())
# wartosci = list(grouped.agg('Liczba').sum())
# plt.bar(x=etykiety, height=wartosci, color=['green', 'red'])
# plt.xlabel('P³eæ')
# plt.ylabel('Liczba narodzonych dzieci')
# # wykres 2
# plt.subplot(1, 3, 2)
# x = df['Rok'].unique()
# kobiety = df[(df.Plec == 'K')].groupby('Rok').agg({'Liczba':['sum']}).values
# mezczyzni = df[(df.Plec == 'M')].groupby('Rok').agg({'Liczba':['sum']}).values
# plt.plot(x, kobiety, label="Kobiety")
# plt.plot(x, mezczyzni, label="Mê¿czyŸni")
# plt.xlabel('Rok')
# #
# # # wykres 3
# plt.subplot(1, 3, 3)
# x = df['Rok'].unique()
# y = df.groupby('Rok').agg('Liczba').sum()
# plt.bar(x, y)
# plt.xlabel('Rok')
# # wyœwietlamy ca³y wykres
# plt.subplots_adjust(wspace=0.85)
# plt.show()
#
# Zadanie 6
# Korzystaj¹c z pliku zamówienia.csv (Pandas) policz sumy zamówieñ dla ka¿dego sprzedawcy i
# wyœwietl wykres ko³owy z procentowym udzia³em ka¿dego sprzedawcy w ogólnej sumie zamówieñ.
# Poszukaj w Internecie jak dodaæ cieñ do takiego wykresu i jak dzia³a atrybut ‘explode’ tego wykresu.
# Przetestuj ten atrybut na wykresie.
# #zad6
# df = pd.read_csv('..\\lab 5 i 6\\zamowienia.csv', sep=';')
# policzone = df.groupby('Sprzedawca')['Utarg'].sum()
# print(policzone)
# # explode
# explode = [0.0 for n in range(len(policzone.index))]
# # okreœlamy które kawa³ki i o ile wysun¹æ, tu losujemy jeden
# explode[np.random.randint(0, len(policzone.index))] = 0.2
# wedges, texts, autotext = plt.pie(x=policzone, labels=policzone.index,
#                                   autopct=lambda pct: "{:.2f}%".format(pct), textprops=dict(color='black'), explode=explode, shadow=True)
# plt.title("Procentowy udzia³ kwot zamówieñ sprzedawców")
# plt.show()